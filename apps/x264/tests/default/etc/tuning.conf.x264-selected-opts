<?xml version="1.0"?>
<config>

    <!-- Prepend this to every compiler flags string.  -->
    <prime flags="-O2 " />

    <!-- Baselines to compare tuned results with.  The first baseline 
         also will be used for comparing results hash.  -->
    <baseline description="-O2" flags="-O2" />
    <baseline description="-O3" flags="-O3" />
    <baseline description="-Os" flags="-Os" />

    <!-- Base directory for compiler installation.  It's expanded in private-etc/build-config
         (you may want to edit it if your compiler has a prefix like arm-unknown-linux-gnueabi-*). -->
    <compiler value="/usr" />
    <!-- If board_id is "localhost", then application will be run directly on the same machine,
         without making ssh connection.  -->
    <board_id value="localhost"/>
    <populations value="2" />
    <population_size value="20" />
    <mutation_rate value="0.05" />
    <migration_rate value="0.2" />
    <greater_is_better value="false" />
    <pareto_summary_chart_generation_number value="5"/>
    <!-- Should not exceed population_size value. -->
    <archive_size value="20" />
    <pareto_best_size value="5" />
    <repetitions value="1" />
    <do_profiling value="false" />
    <num_generations value="10" />
    <num_testboards value="1" />
    <threads_per_testboard value="4" />
    <!-- Should be either "performance", "size", or  "pareto". -->
    <measure value="pareto" />

    <!-- A list of compiler flags for tuning.  -->
    <flags>
        <!-- Most significant options for x264. -->
        <flag type="gcc_flag" value="-ftree-loop-distribution"/>
        <flag type="gcc_flag" value="-ftree-ch"/>
        <flag type="gcc_flag" value="-finline"/>
        <flag type="gcc_flag" value="-finline-functions"/>
        <flag type="gcc_flag" value="-finline-functions-called-once"/>
        <flag type="gcc_flag" value="-finline-small-functions"/>
        <flag type="gcc_flag" value="-fguess-branch-probability"/>
        <flag type="gcc_flag" value="-ffinite-math-only"/>
        <flag type="gcc_flag" value="-fcaller-saves"/>
        <flag type="gcc_flag" value="-fgcse-sm"/>
        <flag type="gcc_flag" value="-ffast-math"/>
        <flag type="gcc_flag" value="-ftree-ter"/>
        <flag type="gcc_flag" value="-ftree-loop-ivcanon"/>
        <flag type="gcc_flag" value="-fthread-jumps"/>
        <flag type="gcc_flag" value="-fipa-sra"/>
        <flag type="gcc_flag" value="-fipa-pta"/>
        <flag type="gcc_flag" value="-fgcse-after-reload"/>
        <flag type="gcc_flag" value="-fpredictive-commoning"/>
        <flag type="gcc_flag" value="-funsafe-math-optimizations"/>
        <flag type="gcc_flag" value="-ftree-sra"/>
        <flag type="gcc_flag" value="-ftree-ccp"/>
        <flag type="gcc_flag" value="-frename-registers"/>
        <flag type="gcc_flag" value="-fgcse"/>
        <flag type="gcc_flag" value="-fgcse-after-reload"/>
        <flag type="gcc_flag" value="-fgcse-las"/>
        <flag type="gcc_flag" value="-fgcse-lm"/>
        <flag type="gcc_flag" value="-fgcse-sm"/>
        <flag type="gcc_flag" value="-ftree-vectorize"/>
        <flag type="gcc_flag" value="-frounding-math"/>
        <flag type="gcc_flag" value="-ftree-vrp"/>
        <flag type="gcc_flag" value="-freorder-blocks"/>
        <flag type="gcc_flag" value="-freorder-blocks-and-partition"/>
        <flag type="gcc_flag" value="-foptimize-sibling-calls"/>
        <flag type="gcc_flag" value="-fipa-cp"/>
        <flag type="gcc_flag" value="-fipa-cp-clone"/>
        <flag type="gcc_flag" value="-fexpensive-optimizations"/>

        <!-- Parameters. -->
        <flag type="param" value="--param max-unroll-times" default="8" min="0" max="16" step="2" separator="=" />
        <flag type="param" value="--param max-unrolled-insns" default="200" min="0" max="400" step="11" separator="=" />
        <flag type="param" value="--param max-completely-peel-times" default="16" min="0" max="32" step="2" separator="=" />

        <!-- Presumably useless options -- good test for reduce-flags. -->
        <flag type="gcc_flag" value="-fsched-spec"/>
        <flag type="gcc_flag" value="-fsched-spec-insn-heuristic"/>
        <flag type="gcc_flag" value="-fsched-spec-load"/>
        <flag type="gcc_flag" value="-fsched-spec-load-dangerous"/>
    </flags>

</config>
